def booltoint : Bool -> Int
| True  = 1
| False = 0

def parsestring : String -> Int
| x = parsestringacc(x, 0)

def parsestringacc : String -> Int -> Int
| "" acc       = acc
| (x : xs) acc = parsestringacc(xs, (acc * 10) + parsechar(x))

def parsechar : Char -> Int
| '0' = 0
| '1' = 1
| '2' = 2
| '3' = 3
| '4' = 4
| '5' = 5
| '6' = 6
| '7' = 7
| '8' = 8
| '9' = 9

def stringlength : String -> Int
| input = stringlengthacc(input, 0)

def stringlengthacc : String -> Int -> Int
| "" acc       = acc
| (x : xs) acc = stringlengthacc(xs, acc + 1)

def stringcontains : String -> String -> Bool
    | "" "" = True
    | "" find = False
    | input find when stringstartswith(input, find) = True
    | x : xs find = stringcontains(xs, find)

def stringstartswith : String -> String -> Bool
| input ""                          = True
| "" find                           = False
| (x : in) (y : find) when x == y   = stringstartswith(in, find)
| _ _                               = False

def inttostring : Int -> String
| 0 = "0"
| n when n < 0 = '-' : inttostringacc(n, "")
| n = inttostringacc(n, "")

def inttostringacc : Int -> String -> String
| 0 res = res
| n res = inttostringacc((n - (n % 10)) / 10, inttochar(n % 10) : res)

def booltostring : Bool -> String
| True = "True"
| False = "False"

def inttochar : Int -> Char
| 0 = '0'
| 1 = '1'
| 2 = '2'
| 3 = '3'
| 4 = '4'
| 5 = '5'
| 6 = '6'
| 7 = '7'
| 8 = '8'
| 9 = '9'

def strmap : (Char -> Char) -> String -> String
| f "" = ""
| f (x : xs) = f(x) : strmap(f, xs)

def toupper : Char -> Char
| 'q' = 'Q'
| 'w' = 'W'
| 'e' = 'E'
| 'r' = 'R'
| 't' = 'T'
| 'y' = 'Y'
| 'u' = 'U'
| 'i' = 'I'
| 'o' = 'O'
| 'p' = 'P'
| 'a' = 'A'
| 's' = 'S'
| 'd' = 'D'
| 'f' = 'F'
| 'g' = 'G'
| 'h' = 'H'
| 'j' = 'J'
| 'k' = 'K'
| 'l' = 'L'
| 'z' = 'Z'
| 'x' = 'X'
| 'c' = 'C'
| 'v' = 'V'
| 'b' = 'B'
| 'n' = 'N'
| 'm' = 'M'
| n = n